package controller;

import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import javax.servlet.http.HttpSession;

import org.codehaus.jackson.JsonGenerationException;
import org.codehaus.jackson.map.JsonMappingException;
import org.codehaus.jackson.map.ObjectMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import service.BestBookService;
import service.BookService;
import service.FavoritesService;
import service.NewBookService;
import service.ReviewListService;
import service.StarPointListService;
import service.UserService;

@Controller
public class BookController {
	@Autowired
	private BestBookService bestBookService;
	@Autowired
	private BookService bookService;
	@Autowired
	private StarPointListService starList;
	@Autowired
	private UserService userService;

	 @Autowired
	 private NewBookService newBookService;
	 
	 @Autowired
	 private ReviewListService reviewListService;

	

	@RequestMapping("mypage.do")
	public String mypage(@RequestParam HashMap<String, Object> params, Model model,HttpSession session) {
		  HashMap<String, Object> user = (HashMap<String, Object>) session.getAttribute("userInfo");
          
          System.out.println(user);

			params.put("myPage", 1);
			params.put("user_name", user.get("name"));
			
			model.addAttribute("list", bookService.selectUserBook(params));
		  
		return "mypage";

	}
	
	@RequestMapping("Star.do")
	public String StarPage(@RequestParam HashMap<String, Object> params, Model model) {
		params.put("myPage", 3);
		params.put("user_name", "bong");
		model.addAttribute("list",starList.selectUserStar(params));
		return "mypage";
	}
			
	 @RequestMapping("main.do")
	 public ModelAndView main(HttpSession httpSession){
	  ModelAndView mav = new ModelAndView();
	  List<HashMap<String, Object>> bookRankingList = bestBookService.selectRankingBestBook();
	  mav.addObject("bookRanking", bookRankingList);
	  mav.setViewName("main");
	  return mav;
	 }
	 
	 @RequestMapping("getBook.do")
	 public ModelAndView getBook(@RequestParam String title) throws Exception{
	  ModelAndView mav = new ModelAndView();
	  
	  ObjectMapper mapper = new ObjectMapper(); 
	  HashMap<String, Object> bookInfo = bookService.selectBook(title);
	  String json =
	  new ObjectMapper().writeValueAsString(bookInfo);
	  
	  mav.addObject("bookInfo",json);
	  mav.setViewName("getBook");
	  return mav;
	 }
	 
	 @RequestMapping("bookSearch.do")
	 public ModelAndView bookSearch(@RequestParam HashMap<String,Object> params ,HttpSession session) throws Exception{
	  ModelAndView mav = new ModelAndView();
	  params.put("email",((HashMap<String,Object>)session.getAttribute("userInfo")).get("email"));
	  List<HashMap<String, Object>> searchBookList = bookService.bookSearch(params);
	 System.out.println(searchBookList);
	  mav.addObject("searchBookList",searchBookList);
	 
	  mav.setViewName("bookSearchList");
	  return mav;
	 }
	 @RequestMapping("bestBook.do")
	 public ModelAndView bestBook() {
	  ModelAndView mav = new ModelAndView();
	  List<HashMap<String,Object>> bestBookList = bestBookService.selectAllBestBook();
	  mav.addObject("bestBookList",bestBookList);
	  mav.setViewName("bestBook");
	  return mav; 
	 }
	 
	 @RequestMapping("newBook.do")
	 public ModelAndView newBook() {
	  ModelAndView mav = new ModelAndView();
	  List<HashMap<String,Object>> newBookList = newBookService.selectAllNewBook();
	  mav.addObject("newBookList",newBookList);
	  mav.setViewName("newBook");
	  return mav;
	 }
	 
	 @RequestMapping("starInsert.do")
	 @ResponseBody
	 public String starInsert(@RequestParam HashMap<String,Object> params,HttpSession session) {
		 params.put("email",((HashMap<String,Object>)session.getAttribute("userInfo")).get("email"));
		 bookService.starAvgCount(params);
		 bookService.starInsert(params);
		 
		 return "{\"booknum\":\"에러내지마\" }";
	 }
	 @RequestMapping("starUpdate.do")
	 @ResponseBody
	 public String starUpdate(@RequestParam HashMap<String, Object> params,HttpSession session) {
		 params.put("email",((HashMap<String,Object>)session.getAttribute("userInfo")).get("email"));
		bookService.starAvgUpdate(params);
		bookService.starUpdate(params);
		 return "{\"booknum\":\"에러내지마\" }";
	 }
	 @RequestMapping("starDelete.do")
	 @ResponseBody
	 public String starDelete(@RequestParam HashMap<String, Object> params,HttpSession session) {
		 params.put("email",((HashMap<String,Object>)session.getAttribute("userInfo")).get("email"));
		 bookService.starAvgDelete(params);
		 bookService.starDelete(params);

		
		 return "{\"booknum\":\"에러내지마\" }";
	 }
	 @RequestMapping("reviewInsert.do")
	 @ResponseBody
	 public String reviewInsert(@RequestParam HashMap<String, Object> params,HttpSession session){
		 params.put("review_writer",((HashMap<String,Object>)session.getAttribute("userInfo")).get("email"));
		bookService.insertReviewList(params);
		 
		 
		 
		 
		 
		 return "{\"booknum\":\"에러내지마\" }";
	 }
	 @RequestMapping("reviewUpdate.do")
	 @ResponseBody
	 public String reviewUpdate(@RequestParam HashMap<String, Object> params,HttpSession session){
		 params.put("review_writer",((HashMap<String,Object>)session.getAttribute("userInfo")).get("email"));
		bookService.updateReviewList(params);
		 
		 
		 
		 
		 
		 return "{\"booknum\":\"에러내지마\" }";
	 }
	 @RequestMapping("reviewDelete.do")
	 @ResponseBody
	 public String reviewDelete(@RequestParam HashMap<String, Object> params,HttpSession session){
		 params.put("review_writer",((HashMap<String,Object>)session.getAttribute("userInfo")).get("email"));
		bookService.deleteReviewList(params);
		 
		 
		 return "{\"booknum\":\"에러내지마\" }";
	 }
	 @RequestMapping("recommended.do")
	 public ModelAndView recommended(HttpSession session) {
		 ModelAndView mav = new ModelAndView();
		
		 List<HashMap<String,Object>> recommendBook=bookService.recommended((String)((HashMap<String,Object>)session.getAttribute("userInfo")).get("email"));
		 recommendBook.addAll(recommendBook);
		 for (int i=0;i<recommendBook.size();i++) {
			for (int j = i+1; j < recommendBook.size(); j++) {
				if(recommendBook.get(i).get("num")==recommendBook.get(j).get("num")) {
					recommendBook.remove(j);
				}
			}	 
		}
		 
		 mav.addObject("recommendBook",recommendBook);
		 System.out.println(recommendBook);
		 mav.setViewName("recommended");
		 
		 return mav;
	 }
}
